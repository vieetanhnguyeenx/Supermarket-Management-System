
@using Newtonsoft.Json;
@model List<Chart>;
@{
    ViewData["Title"] = "Home page";

}
<head>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>

<div class="text-center">
    <h1 class="display-4">Biểu đồ doanh thu, chi phí</h1>  
    <div class="col-4">
        <form id="form-search" class="my-4">
            <h4>Search</h4>
            <div class="form-group mb-2">
                <input type="date" name="startDate"  class="form-control" />
            </div>
            <div class="form-group mb-2">
                <input type="date" name="endDate" class="form-control" />
            </div>
            <div class="form-group mb-2">
                <input type="submit" value="Search" class="btn btn-primary" />
            </div>
        </form>
    </div>
    <body>
        <canvas id="myChart" width="400" height="200"></canvas>
       
    </body>
</div>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Lấy dữ liệu từ model và chuyển đổi sang định dạng mà Chart.js hiểu được
        var chartData = @Html.Raw(JsonConvert.SerializeObject(Model));

        // Lấy ra các ngày
        var dates = chartData.map(function (entry) { return entry.Date; });

        // Lấy ra doanh thu và chi phí
        var incomeData = chartData.map(function (entry) { return entry.Income; });
        var outcomeData = chartData.map(function (entry) { return entry.Outcome; });

        var ctx = document.getElementById('myChart').getContext('2d');
        var myChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: dates,
                datasets: [{
                    label: 'Income',
                    data: incomeData,
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 1,
                    fill: false
                }, {
                    label: 'Outcome',
                    data: outcomeData,
                    borderColor: 'rgba(255, 99, 132, 1)',
                    borderWidth: 1,
                    fill: false
                }]
            },
            options: {
                scales: {
                    x: [{
                        type: 'time',
                        time: {
                            unit: 'day'
                        }
                    }],
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    });
</script>